//producto abstracto
public abstract class Room {
   abstract void connect(Room room);
}

//producto concreto
public class MagicRoom extends Room {
   public void connect(Room room) {}
}

//producto concreto 
public class OrdinaryRoom extends Room {
   public void connect(Room room) {}
}

//creador abstracto
public abstract class MazeGame {
    private final List<Room> rooms = new ArrayList<>();

    public MazeGame() {
        Room room1 = makeRoom();
        Room room2 = makeRoom();
        room1.connect(room2);
        rooms.add(room1);
        rooms.add(room2);
    }

    abstract protected Room makeRoom();
}

//creador concreto magic sobreescribe el metodo abstracto
public class MagicMazeGame extends MazeGame {
    @Override
    protected Room makeRoom() {
        return new MagicRoom(); 
    }
}

//creador concreto ordinaria sobreescribe el metodo abstracto
public class OrdinaryMazeGame extends MazeGame {
    @Override
    protected Room makeRoom() {
        return new OrdinaryRoom(); 
    }
}

MazeGame ordinaryGame = new OrdinaryMazeGame();
MazeGame magicGame = new MagicMazeGame();

